setwd("./qPRAentry")
library(devtools)
load_all() #Actualizar si quiero veer algo
document()
pathway_app()
ntrade_app()
ntrade_app()
ntrade_app()
ntrade_app()
?trade_data
setwd("C:/Users/Perri/OneDrive - Universit√† Cattolica del Sacro Cuore/HoPPI Project/Tool - EFSA Entry/R package/Retithrips syriacus")
library(readr)
Extra_EU <- read_csv("Extra_EU.csv")
View(Extra_EU)
library(readr)
Internal_production <- read_csv("Internal production.csv")
View(Internal_production)
library(readr)
Intra_EU <- read_csv("Intra_EU.csv")
View(Intra_EU)
library(dplyr)
unique(Extra_EU$partner)
trade <- trade_data(
extra_total = Extra_EU %>% filter(partner=="EU_EXTRA"),
extra_pest=Extra_EU %>% filter(partner!="EU_EXTRA"),
intra_trade=Intra_EU,
internal_production=Internal_production,
IDs = NULL,
select_period = NULL
)
View(Extra_EU)
Extra_EU <- Extra_EU %>%
rename(value=OBS_VALUE,
time_period = TIME_PERIOD)
Intra_EU <- Intra_EU %>%
rename(value=OBS_VALUE,
time_period = TIME_PERIOD)
Internal_production <- Internal_production %>%
rename(value=OBS_VALUE,
time_period = TIME_PERIOD,
geo=reporter)
Internal_production <- Internal_production %>%
rename(value=OBS_VALUE,
time_period = TIME_PERIOD,
reporter=geo)
trade <- trade_data(
extra_total = Extra_EU %>% filter(partner=="EU_EXTRA"),
extra_pest=Extra_EU %>% filter(partner!="EU_EXTRA"),
intra_trade=Intra_EU,
internal_production=Internal_production,
IDs = NULL,
select_period = NULL
)
class(trade)
library(readr)
Extra_EU <- read_csv("Extra_EU.csv")
View(Extra_EU)
Extra_EU <- read_csv("Extra_EU.csv")
Intra_EU <- read_csv("Intra_EU.csv")
Internal_production <- read_csv("Internal_production.csv")
Extra_EU <- read_csv("Extra_EU.csv")
Extra_EU <- read_file("Extra_EU.csv")
Extra_EU <- read_file("Extra_EU.csv")
Intra_EU <- read_file("Intra_EU.csv")
Internal_production <- read_file("Internal_production.csv")
Internal_production <- read_file("Internal production.csv")
Extra_EU <- Extra_EU %>%
rename(value=OBS_VALUE,
time_period = TIME_PERIOD) %>%
mutate(value = 0.1*value)
library(readr)
Extra_EU <- read_csv("Extra_EU.csv")
View(Extra_EU)
library(readr)
Internal_production <- read_csv("Internal production.csv")
View(Internal_production)
library(readr)
Intra_EU <- read_csv("Intra_EU.csv")
View(Intra_EU)
head(Extra_EU)
Extra_EU <- Extra_EU %>%
rename(value=OBS_VALUE,
time_period = TIME_PERIOD) %>%
mutate(value = 0.1*value)
Intra_EU <- Intra_EU %>%
rename(value=OBS_VALUE,
time_period = TIME_PERIOD) %>%
mutate(value = 0.1*value)
Internal_production <- Internal_production %>%
rename(value=OBS_VALUE,
time_period = TIME_PERIOD,
reporter=geo) %>%
mutate(value = 1000*value)
trade <- trade_data(
extra_total = Extra_EU %>% filter(partner=="EU_EXTRA"),
extra_pest=Extra_EU %>% filter(partner!="EU_EXTRA"),
intra_trade=Intra_EU,
internal_production=Internal_production,
IDs = NULL,
select_period = NULL
)
sum(Extra_EU$value[Extra_EU$partner=="EU_EXTRA"])
sum(Extra_EU$value[Extra_EU$partner!="EU_EXTRA"])
extra2 <- Extra_EU %>%
mutate(partner2 = case_when(parter != "EU_EXTRA" ~ "NO",
parter == "EU_EXTRA" ~ "EU_EXTRA")) %>%
group_by(time_period, partner2)
extra2 <- Extra_EU %>%
mutate(partner2 = case_when(partner != "EU_EXTRA" ~ "NO",
partner == "EU_EXTRA" ~ "EU_EXTRA")) %>%
group_by(time_period, partner2)
View(extra2)
summarise(values = sum(values))
summarise(value = sum(value))
View(extra2)
extra2 <- extra2 %>%
group_by(time_period, partner2) %>%
summarise(value = sum(value))
View(extra2)
trade <- trade_data(
extra_total = Extra_EU %>% filter(partner=="EU_EXTRA"),
extra_pest=Extra_EU %>% filter(partner!="EU_EXTRA"),
intra_trade=Intra_EU,
internal_production=Internal_production,
IDs = NULL,
select_period = NULL
)
#############
extra_total = Extra_EU %>% filter(partner=="EU_EXTRA")
extra_pest=Extra_EU %>% filter(partner!="EU_EXTRA")
intra_trade=Intra_EU
internal_production=Internal_production
IDs = NULL
select_period = NULL
# check data.frames
if(!all(is.data.frame(extra_total), is.data.frame(extra_pest),
is.data.frame(intra_trade), is.data.frame(internal_production))){
no_df <- c()
if(!is.data.frame(extra_total)){no_df <- c(no_df, "extra_total")}
if(!is.data.frame(extra_pest)){no_df <- c(no_df, "extra_pest")}
if(!is.data.frame(intra_trade)){no_df <- c(no_df, "intra_trade")}
if(!is.data.frame(internal_production)){no_df <- c(no_df, "internal_production")}
stop(paste0("Error: ", paste(no_df, collapse=", "), " must be data.frame."))
}
#check column names
if (!all(c("reporter", "partner", "value", "time_period") %in% colnames(extra_total))) {
stop("Error: extra_total must contain the columns 'reporter', 'partner', 'value' and 'time_period'.")
}
if (!all(c("reporter", "partner", "value", "time_period") %in% colnames(extra_pest))) {
stop("Error: extra_pest must contain the columns 'reporter', 'partner', 'value' and 'time_period'.")
}
if (!all(c("reporter", "partner", "value", "time_period") %in% colnames(intra_trade))) {
stop("Error: intra_trade must contain the columns 'reporter', 'partner', 'value' and 'time_period'.")
}
if (!all(c("reporter", "value", "time_period") %in% colnames(internal_production))) {
stop("Error: internal_production must contain the columns 'reporter', 'value' and 'time_period'.")
}
#check value numeric
if(!all(is.numeric(extra_total$value), is.numeric(extra_pest$value),
is.numeric(intra_trade$value), is.numeric(internal_production$value))){
no_num <- c()
if(!is.numeric(extra_total$value)){no_num <- c(no_num, "extra_total")}
if(!is.numeric(extra_pest$value)){no_num <- c(no_num, "extra_pest")}
if(!is.numeric(intra_trade$value)){no_num <- c(no_num, "intra_trade")}
if(!is.numeric(internal_production$value)){no_num <- c(no_num, "internal_production")}
stop(paste0("Error: 'value' in ", paste(no_num, collapse=", "), " must be numeric."))
}
# check value not negative
if(!all(extra_total$value[!is.na(extra_total$value)]>=0,
extra_pest$value[!is.na(extra_pest$value)]>=0,
intra_trade$value[!is.na(intra_trade$value)]>=0,
internal_production$value[!is.na(internal_production$value)]>=0)){
neg_val <- c()
if(any(extra_total$value[!is.na(extra_total$value)]<0)){
neg_val <- c(neg_val, "extra_total")}
if(any(extra_pest$value[!is.na(extra_pest$value)]<0)){
neg_val <- c(neg_val, "extra_pest")}
if(any(intra_trade$value[!is.na(intra_trade$value)]<0)){
neg_val <- c(neg_val, "intra_trade")}
if(any(internal_production$value[!is.na(internal_production$value)]<0)){
neg_val <- c(neg_val, "internal_production")}
stop(paste0("Error: Invalid 'value' detected. Negative values in ",
paste(neg_val, collapse=", "),
", not interpretable as quantities."))
}
IDs <- unique(c(extra_total$reporter,
intra_trade$reporter,
internal_production$reporter))
tp <- if(!is.null(select_period)){
select_period
}else{
unique(c(extra_total$time_period,
intra_trade$time_period,
internal_production$time_period))
}
IDs_excluded <- check_missing_ids(extra_total, intra_trade, internal_production,
IDs, tp)
IDs_excluded
dataframes_list <- list("extra_total" = summarize_data(extra_total, select_period),
"extra_pest" = summarize_data(extra_pest, select_period),
"intra_import" = summarize_data(intra_trade, select_period),
"intra_export" = summarize_data(intra_trade, select_period,
reporter = FALSE, partner = TRUE),
"internal_production" = summarize_data(internal_production, select_period)
)
dataframes_list <- imap(dataframes_list, ~rename(.x, !!.y := "value"))
total_trade <- data.frame(IDs = rep(IDs, each = length(tp)),
time_period = rep(tp, length(IDs)))
total_trade <- reduce(
dataframes_list,
function(left, right) {
full_join(left, right, by=join_by(IDs, time_period))
},
.init = total_trade) %>%
replace(is.na(.), 0) %>%
rowwise() %>%
mutate(total_available = (extra_total + internal_production)) %>%
# when intra export of an ID is greater than the total available
# the export to each ID proportional to the total available
mutate(export_prop = case_when(
intra_export > total_available ~ {
total_available / intra_export
},
.default = 1
))
View(total_trade)
error_ExtraPest <- total_trade %>%
filter(extra_pest > extra_total) %>%
select(IDs, time_period) %>%
distinct()
View(error_ExtraPest)
View(error_ExtraPest)
total_trade %>%
filter(extra_pest > extra_total)
total_trade %>%
filter(extra_total < extra_pest)
error_ExtraPest <- total_trade %>%
total_trade %>%
filter(round(extra_total,2) < round(extra_pest,2))
total_trade %>%
filter(round(extra_pest,2) > round(extra_total,2))
total_trade$extra_pest[total_trade$IDs=="CY" & total_trade$time_period==2016]==total_trade$extra_total[total_trade$IDs=="CY" & total_trade$time_period==2016]
total_trade %>%
filter(round(extra_pest,1) > round(extra_total,1)) %>%
select(IDs, time_period) %>%
distinct()
total_trade$extra_pest[total_trade$IDs=="CY" & total_trade$time_period==2016]
total_trade$extra_total[total_trade$IDs=="CY" & total_trade$time_period==2016]
total_trade %>%
filter(!all.equal(extra_pest, extra_total),
extra_pest > extra_total)
?all.equal
total_trade %>%
filter(!all.equal(extra_pest, extra_total))
total_trade %>%
filter(all.equal(extra_pest, extra_total))
total_trade %>%
filter(all.equal(extra_pest, extra_total)==FALSE,
extra_pest > extra_total)
total_trade %>%
filter(all.equal(extra_pest, extra_total)==TRUE)
setwd("C:/Users/Perri/Documents/GitHub")
setwd("./qPRAentry")
library(devtools)
load_all() #Actualizar si quiero veer algo
document()
ntrade_app()
pathway_app()
pathway_app()
