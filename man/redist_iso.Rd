% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/redist_iso.R
\name{redist_iso}
\alias{redist_iso}
\title{Data redistribution to country subdivisions}
\usage{
redist_iso(
  data,
  iso_col,
  values_col,
  redist_data,
  redist_iso_col,
  redist_values_col
)
}
\arguments{
\item{data}{A data frame containing the data at the country-level to
redistribute.}

\item{iso_col}{A string specifying the column name in \code{data}
with the ISO 3166-1 (alpha-2) country codes.}

\item{values_col}{A string or vector specifying the column name(s) in
\code{data} with the values to be redistributed.}

\item{redist_data}{A data frame with values for each subdivision on which the
redistribution is to be performed.}

\item{redist_iso_col}{A string specifying the column name in \code{redist_data}
that contains the destination ISO 3166-2 codes.}

\item{redist_values_col}{A string specifying the column name in \code{redist_data}
with the values for proportional redistribution. This will define the weights
used for the redistribution.}
}
\value{
A data frame with the redistributed values across the specified subnational
level. The dataframe contains the columns \code{ISO_1} with the codes at country
level, \code{ISO_2} with the codes at subdivision level, \code{proportion} with the
proportion according to which the values have been redistributed, and the columns
corresponding to the redistributed values with the same name specified in \code{values_col}.
}
\description{
Value redistribution from country-level (ISO 3166-1 alpha-2 codes) to principal
subdivisions (ISO 3166-2 codes). See
\href{https://www.iso.org/iso-3166-country-codes.html}{ISO 3166 Maintenance Agency}.
}
\details{
This function enables redistribution of values from country-level
to principal subdivisions (e.g., provinces or states), proportionally
to user-supplied redistribution proportions.

Note that more than one column of values provided in the dataframe data can be
redistributed at the same time. The values in columns \code{values_col} and
\code{redist_values_col} must be numeric and positive.
\subsection{Common uses}{

In the context of quantitative pest risk assessment (qPRA) at the entry step,
this function can be applied to redistribute the quantity of potentially infested
commodities (\eqn{N_{trade}}, see \code{\link[=ntrade]{ntrade()}}) or the number of potential
founder populations (\eqn{NPFP}, see \code{\link[=pathway_model]{pathway_model()}}). For this purpose,
population or consumption data from subdivisions are often used for redistribution.
}
}
\examples{
## Example of data redistribution in Northern American countries
data(datatrade_NorthAm)
# extract ISO codes at country level
iso_3166_1 <- unique(datatrade_NorthAm$internal_production$reporter)
# simulate values for each country
iso1_data <- data.frame(iso_3166_1 = iso_3166_1,
                        values = abs(rnorm(length(iso_3166_1), 30000, 10000)))
# simulate values for each subdivision
# ISO 3166_2 codes extracted from 'rnaturalearth' package
library(dplyr)
library(rnaturalearth)
iso2_data <- ne_states() \%>\% 
  # subdivisions of the countries selected above
  filter(substr(iso_3166_2, 1, 2) \%in\% iso_3166_1) \%>\% 
  distinct(iso_3166_2) \%>\%
  select(iso_3166_2) \%>\% 
  # simulate values for each subdivision
  mutate(values = abs(rnorm(nrow(.), 0, 1000)))

data_redist <- redist_iso(data = iso1_data,
                          iso_col = "iso_3166_1",
                          values_col = "values",
                          redist_data = iso2_data,
                          redist_iso_col = "iso_3166_2",
                          redist_values_col = "values")

head(data_redist)

# Plot using the 'sf' object from 'rnaturalearth' package
iso2_plot <- ne_states() \%>\% 
  filter(substr(iso_3166_2, 1, 2) \%in\% iso_3166_1) \%>\% 
  left_join(data_redist, by = join_by(iso_3166_2 == ISO_2))

library(ggplot2)
ggplot(iso2_plot, aes(fill = values)) + 
  geom_sf()
  
## Example of redistribution of two columns
# simulate values for each country
iso1_data$values2 <- abs(rnorm(nrow(iso1_data), 1000, 500))
data_redist <- redist_iso(data = iso1_data,
                          iso_col = "iso_3166_1",
                          values_col = c("values", "values2"),
                          redist_data = iso2_data,
                          redist_iso_col = "iso_3166_2",
                          redist_values_col = "values")

head(data_redist)

}
\seealso{
\code{\link[=ntrade]{ntrade()}}, \code{\link[=pathway_model]{pathway_model()}}
}
